<!DOCTYPE ui:UiBinder SYSTEM "http://dl.google.com/gwt/DTD/xhtml.ent">
<ui:UiBinder xmlns:ui="urn:ui:com.google.gwt.uibinder" xmlns:g="urn:import:com.google.gwt.user.client.ui" xmlns:m="urn:import:org.markdown4j.client">
	<ui:import field="markdown4j.gwt.demo.client.MarkdownDemoPage.MarkdownSnippets.INSTANCE" />

	<ui:style>
	@external emoji, h1, h2, h3, h4, h5, h6;
	
	body {
		font-family: 'Noto Sans', sans-serif;
	}
	
	.pad {
		margin-bottom: 10px;
	}
	
	.overflow {
		overflow-y: auto;
		height: 300px;
	}
	
	p .emoji {
	    height: 14px;
	    margin-bottom: 2px;
	}
	
	h1 .emoji, .h1 .emoji {
	    height: 36px;
	    margin-bottom: 2px;
	}
	
	h2 .emoji, .h2 .emoji {
	    height: 30px;
	    margin-bottom: 2px;
	}
	
	h3 .emoji, .h3 .emoji {
	    height: 24px;
	    margin-bottom: 2px;
	}
	
	h4 .emoji, .h4 .emoji {
	    height: 18px;
	    margin-bottom: 2px;
	}
	
	h5 .emoji, .h5 .emoji {
	    height: 14px;
	    margin-bottom: 2px;
	}
	
	h6 .emoji, .h6 .emoji {
	    height: 12px;
	    margin-bottom: 2px;
	}
	</ui:style>
	<g:HTMLPanel styleName="container {style.pad}">
		<h1>
			Markdown4j-gwt
			<small>Demo</small>
		</h1>
		<p>This simple demo showing markdown processing with markdown4j gwt.</p>
		<p>
			The library source is located at
			<a href="https://github.com/ReflectionIO/markdown4j-gwt">ReflectionIO/markdown4j-gwt</a>
			.
		</p>
		<p>
			Demo markdown was obtained from
			<a href="http://jaspervdj.be/lorem-markdownum/" target="_blank">http://jaspervdj.be/lorem-markdownum/</a>
			.
		</p>
		<h2>Markdown editor</h2>
		<p>This editor demonstrates live updating markdown, where the async plugins have not been registered. They can be registered but they mostly rely on server
			calls to third party services, so it would be wastefull to make the calls on keypress.</p>
		<p>
			Emoji is/are supported and I have created css to match their position e.g.
			<code>h2 .emoji {}</code>
			or
			<code> .emoji {}</code>
			etc. so they look a little better with the surrounding text.
		</p>
		<div class="row">
			<div class="col-sm-6">
				<g:TextArea ui:field="markdown" visibleLines="15" styleName="col-xs-12 {style.pad}" />
				<g:InlineHyperlink ui:field="clear" styleName="btn btn-primary btn-lg">Clear</g:InlineHyperlink>
				<g:InlineHyperlink ui:field="another" styleName="btn btn-default btn-lg">Another</g:InlineHyperlink>
			</div>
			<g:HTMLPanel ui:field="converted" styleName="col-sm-6 {style.overflow}" />
		</div>

		<h2>Async Markdown editor</h2>
		<p>
			This editor demonstrates the async plugins. Currently
			<a href="http://www.yuml.me" rel="nofollow">yUML</a>
			(not really an async plugin),
			<a href="http://www.websequencediagrams.com/" target="_blank">websequencediagrams</a>
			and import are supported and users can add their own. The original author seems
			to have had other plans for the import plugin markdown syntax, but this works
			for now.
		</p>
		<div class="row">
			<div class="col-sm-6">
				<g:TextArea ui:field="asyncMarkdown" visibleLines="15" styleName="col-xs-12 {style.pad}" />
				<g:InlineHyperlink ui:field="process" styleName="btn btn-primary btn-lg">Process</g:InlineHyperlink>
			</div>
			<g:HTMLPanel ui:field="asyncConverted" styleName="col-sm-6 {style.overflow}" />
		</div>

		<h2>UiBinder Markdown</h2>
		<p>
			This section demostrates the ability to use the new code generator and safehtml to insert markdown in ui:binder files
			<code>&lt;ui:safehtml from="{INSTANCE.generated}" /&gt;</code>
			and
			<pre>
interface MarkdownSnippets extends ClientBundle {
	static final MarkdownSnippets INSTANCE = GWT.create(MarkdownSnippets.class);
	
	@Source("res/generated.md")
	Markdown generated();
	
	@Source("res/emoji.md")
	Markdown emoji();
}
			</pre>

		</p>

		<ui:safehtml from="{INSTANCE.generated}" />
		<p>
			Emoji are not supported yet :(
		</p>
		<ui:safehtml from="{INSTANCE.emoji}" />
	</g:HTMLPanel>
</ui:UiBinder>